{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sandra\\\\Documents\\\\SIDE PROJECTS\\\\buystuff\\\\src\\\\components\\\\Cart.js\";\nimport React, { useContext } from 'react';\nimport { ShopContext } from '../context/shopContext';\nimport { Div, Container, SideDrawer, Text, Anchor, Row, Col } from 'atomize';\n\nconst Cart = () => {\n  const {\n    isCartOpen,\n    closeCart,\n    checkout\n  } = useContext(ShopContext);\n\n  if (checkout.lineItems) {\n    return /*#__PURE__*/React.createElement(SideDrawer, {\n      isOpen: isCartOpen,\n      onClose: closeCart,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      d: \"flex\",\n      flexDir: \"column\",\n      h: \"100%\",\n      m: {\n        b: \"4rem\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      flexGrow: \"2\",\n      p: \"0.7rem\",\n      overflow: \"auto\",\n      flexDir: \"column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 21\n      }\n    }, checkout.lineItems.length < 1 ? /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      tag: \"h1\",\n      textSize: \"paragraph\",\n      hoverTextColor: \"black700\",\n      transition: \"0.3s\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 34\n      }\n    }, \"Cart is empty.\"))) : /*#__PURE__*/React.createElement(React.Fragment, null, checkout.lineItems && checkout.lineItems.map(item => {\n      /*#__PURE__*/\n      React.createElement(Row, {\n        key: item.id,\n        p: {\n          t: \"5px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Div, {\n        bgImg: item.variant.image.src,\n        bgSize: \"cover\",\n        bgPos: \"center center\",\n        h: \"5rem\",\n        w: \"4rem\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 37\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 37\n        }\n      }, item.title), /*#__PURE__*/React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 37\n        }\n      }, item.variant), /*#__PURE__*/React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 37\n        }\n      }, item.quantity)), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 37\n        }\n      }, \"$\", item.variant.price)));\n    })))), /*#__PURE__*/React.createElement(Anchor, {\n      href: checkout.webUrl,\n      target: \"_blank\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, \"Checkout\"));\n  } else {\n    return null;\n  }\n};\n\nexport default Cart;","map":{"version":3,"sources":["C:/Users/Sandra/Documents/SIDE PROJECTS/buystuff/src/components/Cart.js"],"names":["React","useContext","ShopContext","Div","Container","SideDrawer","Text","Anchor","Row","Col","Cart","isCartOpen","closeCart","checkout","lineItems","b","length","map","item","id","t","variant","image","src","title","quantity","price","webUrl"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\r\nimport { ShopContext } from '../context/shopContext'\r\nimport { Div, Container, SideDrawer, Text, Anchor, Row, Col } from 'atomize';\r\n\r\nconst Cart = () => {\r\n    const { isCartOpen, closeCart, checkout } = useContext(ShopContext)\r\n\r\n    if(checkout.lineItems){        \r\n        return (\r\n            <SideDrawer isOpen={isCartOpen} onClose={closeCart}>\r\n                <Container d=\"flex\" flexDir=\"column\" h=\"100%\" m={{ b: \"4rem\" }}>\r\n                    <Row flexGrow=\"2\" p=\"0.7rem\" overflow=\"auto\" flexDir=\"column\">\r\n                        {checkout.lineItems.length < 1 ?\r\n                        <Row>\r\n                            <Col><Text tag=\"h1\"  textSize=\"paragraph\" hoverTextColor=\"black700\" transition=\"0.3s\">\r\n                                Cart is empty.\r\n                            </Text></Col>\r\n                        </Row>\r\n                        :\r\n                        <>\r\n                        {checkout.lineItems && checkout.lineItems.map((item)=> {\r\n                            <Row key={item.id} p={{t:\"5px\"}}>\r\n                                <Col>\r\n                                    <Div bgImg={item.variant.image.src} bgSize=\"cover\" bgPos=\"center center\" h=\"5rem\" w=\"4rem\"/>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Text>{item.title}</Text>\r\n                                    <Text>{item.variant}</Text>\r\n                                    <Text>{item.quantity}</Text>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Text>${item.variant.price}</Text>\r\n                                </Col>\r\n                            </Row>\r\n                        })}\r\n                        </>\r\n                        }\r\n                    </Row>\r\n                </Container>\r\n                <Anchor href={checkout.webUrl} target='_blank'>Checkout</Anchor>\r\n            </SideDrawer>\r\n        )\r\n    } else { return null }\r\n}\r\n\r\nexport default Cart;"]},"metadata":{},"sourceType":"module"}